openapi: 3.0.3
info:
  title: Learning Platform API
  version: 1.0.0
  description: API for online learning platform with video courses and Q&A
paths:
  /api/auth/login/:
    post:
      operationId: api_auth_login_create
      description: 이메일(또는 사용자명)과 비밀번호로 로그인하여 JWT 토큰을 발급받습니다.
      summary: 로그인
      tags:
      - 인증
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPairRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/password/change/:
    post:
      operationId: api_auth_password_change_create
      description: 현재 로그인한 사용자의 비밀번호를 변경합니다.
      summary: 비밀번호 변경
      tags:
      - 프로필
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: 비밀번호 변경 성공
        '400':
          description: 유효성 검사 실패
        '401':
          description: 인증 실패
  /api/auth/profile/:
    get:
      operationId: api_auth_profile_retrieve
      description: 현재 로그인한 사용자의 프로필 정보를 조회하거나 수정합니다.
      summary: 내 프로필 조회/수정
      tags:
      - 프로필
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
        '401':
          description: 인증 실패
    put:
      operationId: api_auth_profile_update
      description: 현재 로그인한 사용자의 프로필 정보를 조회하거나 수정합니다.
      summary: 내 프로필 조회/수정
      tags:
      - 프로필
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileRequest'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
        '401':
          description: 인증 실패
    patch:
      operationId: api_auth_profile_partial_update
      description: 현재 로그인한 사용자의 프로필 정보를 조회하거나 수정합니다.
      summary: 내 프로필 조회/수정
      tags:
      - 프로필
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfileRequest'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
        '401':
          description: 인증 실패
  /api/auth/register/:
    post:
      operationId: api_auth_register_create
      description: 새로운 사용자를 등록합니다.
      summary: 회원가입
      tags:
      - 인증
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 회원가입 성공
        '400':
          description: 유효성 검사 실패
  /api/auth/token/refresh/:
    post:
      operationId: api_auth_token_refresh_create
      description: Refresh 토큰을 사용하여 새로운 Access 토큰을 발급받습니다.
      summary: 토큰 갱신
      tags:
      - 인증
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      security:
      - bearerAuth: []
      responses:
        '200':
          description: 토큰 갱신 성공
        '401':
          description: 유효하지 않은 토큰
  /api/comments/:
    get:
      operationId: api_comments_list
      description: 레슨별 댓글 목록을 조회합니다. 대댓글도 포함됩니다.
      summary: 댓글 목록 조회
      parameters:
      - in: query
        name: author
        schema:
          type: integer
        description: 작성자 ID
      - in: query
        name: lecture
        schema:
          type: integer
        description: 레슨 ID
        required: true
      - in: query
        name: ordering
        schema:
          type: string
        description: 정렬 (created_at, -created_at)
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - 댓글
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommentList'
          description: ''
    post:
      operationId: api_comments_create
      description: 새로운 댓글을 작성합니다. parent를 지정하면 대댓글이 됩니다. (인증 필요)
      summary: 댓글 작성
      tags:
      - 댓글
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentCreate'
          description: ''
  /api/comments/{id}/:
    get:
      operationId: api_comments_retrieve
      description: 댓글의 상세 정보를 조회합니다.
      summary: 댓글 상세 조회
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 댓글.
        required: true
      tags:
      - 댓글
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: api_comments_update
      description: 댓글을 수정합니다. (작성자만 가능)
      summary: 댓글 수정
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 댓글.
        required: true
      tags:
      - 댓글
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentUpdate'
          description: ''
    patch:
      operationId: api_comments_partial_update
      description: 댓글을 부분 수정합니다. (작성자만 가능)
      summary: 댓글 부분 수정
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 댓글.
        required: true
      tags:
      - 댓글
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCommentUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCommentUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCommentUpdateRequest'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentUpdate'
          description: ''
    delete:
      operationId: api_comments_destroy
      description: 댓글을 삭제합니다. 최상위 댓글 삭제 시 대댓글도 함께 삭제됩니다. (작성자만 가능)
      summary: 댓글 삭제
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 댓글.
        required: true
      tags:
      - 댓글
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/courses/:
    get:
      operationId: api_courses_list
      description: 공개된 강의 목록을 조회합니다. 검색, 필터링, 정렬이 가능합니다.
      summary: 강의 목록 조회
      parameters:
      - in: query
        name: instructor
        schema:
          type: integer
        description: 강사 ID
      - in: query
        name: is_published
        schema:
          type: boolean
        description: 공개 여부
      - in: query
        name: ordering
        schema:
          type: string
        description: 정렬 (-created_at, lectures_count 등)
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
        description: 검색어 (제목, 설명, 강사명)
      tags:
      - 강의
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseListList'
          description: ''
    post:
      operationId: api_courses_create
      description: 새로운 강의를 생성합니다. (인증 필요)
      summary: 강의 생성
      tags:
      - 강의
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseCreate'
          description: ''
  /api/courses/{id}/:
    get:
      operationId: api_courses_retrieve
      description: 강의의 상세 정보와 레슨 목록을 조회합니다.
      summary: 강의 상세 조회
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 강의.
        required: true
      tags:
      - 강의
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseDetail'
          description: ''
    put:
      operationId: api_courses_update
      description: 강의를 수정합니다. (강사만 가능)
      summary: 강의 수정
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 강의.
        required: true
      tags:
      - 강의
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseUpdate'
          description: ''
    patch:
      operationId: api_courses_partial_update
      description: 강의를 부분 수정합니다. (강사만 가능)
      summary: 강의 부분 수정
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 강의.
        required: true
      tags:
      - 강의
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCourseUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCourseUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCourseUpdateRequest'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseUpdate'
          description: ''
    delete:
      operationId: api_courses_destroy
      description: 강의를 삭제합니다. (강사만 가능)
      summary: 강의 삭제
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 강의.
        required: true
      tags:
      - 강의
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/lectures/:
    get:
      operationId: api_lectures_list
      description: 레슨 목록을 조회합니다. 강의별 필터링이 가능합니다.
      summary: 레슨 목록 조회
      parameters:
      - in: query
        name: content_type
        schema:
          type: string
        description: 콘텐츠 타입 (text/video/link/file)
      - in: query
        name: course
        schema:
          type: integer
        description: 강의 ID
      - in: query
        name: ordering
        schema:
          type: string
        description: 정렬 (order, created_at, duration)
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: search
        schema:
          type: string
        description: 검색어 (제목, 내용)
      tags:
      - 레슨
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLectureListList'
          description: ''
    post:
      operationId: api_lectures_create
      description: 새로운 레슨을 생성합니다. (강의 강사만 가능)
      summary: 레슨 생성
      tags:
      - 레슨
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LectureCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LectureCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LectureCreateRequest'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LectureCreate'
          description: ''
  /api/lectures/{id}/:
    get:
      operationId: api_lectures_retrieve
      description: 레슨의 상세 정보를 조회합니다.
      summary: 레슨 상세 조회
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 레슨.
        required: true
      tags:
      - 레슨
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LectureDetail'
          description: ''
    put:
      operationId: api_lectures_update
      description: 레슨을 수정합니다. (강의 강사만 가능)
      summary: 레슨 수정
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 레슨.
        required: true
      tags:
      - 레슨
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LectureUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LectureUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LectureUpdateRequest'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LectureUpdate'
          description: ''
    patch:
      operationId: api_lectures_partial_update
      description: 레슨을 부분 수정합니다. (강의 강사만 가능)
      summary: 레슨 부분 수정
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 레슨.
        required: true
      tags:
      - 레슨
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLectureUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLectureUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLectureUpdateRequest'
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LectureUpdate'
          description: ''
    delete:
      operationId: api_lectures_destroy
      description: 레슨을 삭제합니다. (강의 강사만 가능)
      summary: 레슨 삭제
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 레슨.
        required: true
      tags:
      - 레슨
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/media/:
    get:
      operationId: api_media_list
      description: 업로드된 미디어 파일 목록을 조회합니다.
      summary: 미디어 파일 목록 조회
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - 미디어
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMediaFileList'
          description: ''
    post:
      operationId: api_media_create
      description: 비디오, 문서, 이미지 파일을 업로드합니다. (인증 필요)
      summary: 미디어 파일 업로드
      tags:
      - 미디어
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaFileUploadRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MediaFileUploadRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaFileUploadRequest'
        required: true
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaFile'
          description: ''
        '400':
          description: 파일 검증 실패
  /api/media/{id}/:
    get:
      operationId: api_media_retrieve
      description: 미디어 파일의 상세 정보를 조회합니다.
      summary: 미디어 파일 상세 조회
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 미디어 파일.
        required: true
      tags:
      - 미디어
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaFile'
          description: ''
    delete:
      operationId: api_media_destroy
      description: 미디어 파일을 삭제합니다. (업로더만 가능)
      summary: 미디어 파일 삭제
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 미디어 파일.
        required: true
      tags:
      - 미디어
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '204':
          description: No response body
  /api/media/{id}/stream/:
    get:
      operationId: api_media_stream_retrieve
      description: 비디오 파일을 HTTP Range 요청으로 스트리밍합니다.
      summary: 비디오 스트리밍
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this 미디어 파일.
        required: true
      tags:
      - 미디어
      security:
      - jwtAuth: []
      - bearerAuth: []
      responses:
        '200':
          description: 스트리밍 성공
        '206':
          description: 부분 콘텐츠 (Partial Content)
        '404':
          description: 파일을 찾을 수 없음
components:
  schemas:
    ChangePasswordRequest:
      type: object
      description: 비밀번호 변경 Serializer
      properties:
        old_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password2:
          type: string
          writeOnly: true
          minLength: 1
          title: 새 비밀번호 확인
      required:
      - new_password
      - new_password2
      - old_password
    Comment:
      type: object
      description: 댓글 Serializer (대댓글 포함)
      properties:
        id:
          type: integer
          readOnly: true
        lecture:
          type: integer
          title: 레슨
        author:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        parent:
          type: integer
          nullable: true
          title: 부모 댓글
        content:
          type: string
          title: 내용
        replies:
          type: string
          readOnly: true
        reply_count:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: 작성일
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: 수정일
      required:
      - author
      - content
      - created_at
      - id
      - lecture
      - replies
      - reply_count
      - updated_at
    CommentCreate:
      type: object
      description: 댓글 생성 Serializer
      properties:
        lecture:
          type: integer
          title: 레슨
        parent:
          type: integer
          nullable: true
          title: 부모 댓글
        content:
          type: string
          title: 내용
      required:
      - content
      - lecture
    CommentCreateRequest:
      type: object
      description: 댓글 생성 Serializer
      properties:
        lecture:
          type: integer
          title: 레슨
        parent:
          type: integer
          nullable: true
          title: 부모 댓글
        content:
          type: string
          minLength: 1
          title: 내용
      required:
      - content
      - lecture
    CommentUpdate:
      type: object
      description: 댓글 수정 Serializer
      properties:
        content:
          type: string
          title: 내용
      required:
      - content
    CommentUpdateRequest:
      type: object
      description: 댓글 수정 Serializer
      properties:
        content:
          type: string
          minLength: 1
          title: 내용
      required:
      - content
    ContentTypeEnum:
      enum:
      - text
      - video
      - link
      - file
      type: string
      description: |-
        * `text` - 텍스트
        * `video` - 비디오 업로드
        * `link` - 외부 링크
        * `file` - 첨부파일
    CourseCreate:
      type: object
      description: 강의 생성 Serializer
      properties:
        title:
          type: string
          title: 강의 제목
          maxLength: 200
        description:
          type: string
          title: 강의 설명
        thumbnail:
          type: string
          format: uri
          nullable: true
          title: 썸네일
        is_published:
          type: boolean
          title: 공개 여부
      required:
      - description
      - title
    CourseCreateRequest:
      type: object
      description: 강의 생성 Serializer
      properties:
        title:
          type: string
          minLength: 1
          title: 강의 제목
          maxLength: 200
        description:
          type: string
          minLength: 1
          title: 강의 설명
        thumbnail:
          type: string
          format: binary
          nullable: true
          title: 썸네일
        is_published:
          type: boolean
          title: 공개 여부
      required:
      - description
      - title
    CourseDetail:
      type: object
      description: 강의 상세 Serializer (레슨 목록 포함)
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: 강의 제목
          maxLength: 200
        description:
          type: string
          title: 강의 설명
        thumbnail:
          type: string
          format: uri
          nullable: true
          title: 썸네일
        instructor:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_published:
          type: boolean
          title: 공개 여부
        lectures_count:
          type: integer
          readOnly: true
          title: 레슨 수
        total_duration:
          type: integer
          readOnly: true
          title: 총 재생시간(초)
        lectures:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: 생성일
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: 수정일
      required:
      - created_at
      - description
      - id
      - instructor
      - lectures
      - lectures_count
      - title
      - total_duration
      - updated_at
    CourseList:
      type: object
      description: 강의 목록 Serializer (간단한 정보)
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          title: 강의 제목
          maxLength: 200
        description:
          type: string
          title: 강의 설명
        thumbnail:
          type: string
          format: uri
          nullable: true
          title: 썸네일
        instructor:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        is_published:
          type: boolean
          title: 공개 여부
        lectures_count:
          type: integer
          readOnly: true
          title: 레슨 수
        total_duration:
          type: integer
          readOnly: true
          title: 총 재생시간(초)
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: 생성일
      required:
      - created_at
      - description
      - id
      - instructor
      - lectures_count
      - title
      - total_duration
    CourseUpdate:
      type: object
      description: 강의 수정 Serializer
      properties:
        title:
          type: string
          title: 강의 제목
          maxLength: 200
        description:
          type: string
          title: 강의 설명
        thumbnail:
          type: string
          format: uri
          nullable: true
          title: 썸네일
        is_published:
          type: boolean
          title: 공개 여부
      required:
      - description
      - title
    CourseUpdateRequest:
      type: object
      description: 강의 수정 Serializer
      properties:
        title:
          type: string
          minLength: 1
          title: 강의 제목
          maxLength: 200
        description:
          type: string
          minLength: 1
          title: 강의 설명
        thumbnail:
          type: string
          format: binary
          nullable: true
          title: 썸네일
        is_published:
          type: boolean
          title: 공개 여부
      required:
      - description
      - title
    CustomTokenObtainPairRequest:
      type: object
      description: 커스텀 JWT 토큰 Serializer (사용자 정보 포함)
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    FileTypeEnum:
      enum:
      - video
      - document
      - image
      type: string
      description: |-
        * `video` - 비디오
        * `document` - 문서
        * `image` - 이미지
    LectureCreate:
      type: object
      description: 레슨 생성 Serializer
      properties:
        course:
          type: integer
          title: 강의
        title:
          type: string
          title: 레슨 제목
          maxLength: 200
        content_type:
          allOf:
          - $ref: '#/components/schemas/ContentTypeEnum'
          title: 콘텐츠 타입
        content_text:
          type: string
          title: 텍스트 내용
        video_url:
          type: string
          format: uri
          title: 외부 비디오 URL
          maxLength: 200
        media_file:
          type: integer
          nullable: true
          title: 미디어 파일
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          default: 0
          title: 순서
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: 재생시간(초)
      required:
      - content_type
      - course
      - title
    LectureCreateRequest:
      type: object
      description: 레슨 생성 Serializer
      properties:
        course:
          type: integer
          title: 강의
        title:
          type: string
          minLength: 1
          title: 레슨 제목
          maxLength: 200
        content_type:
          allOf:
          - $ref: '#/components/schemas/ContentTypeEnum'
          title: 콘텐츠 타입
        content_text:
          type: string
          title: 텍스트 내용
        video_url:
          type: string
          format: uri
          title: 외부 비디오 URL
          maxLength: 200
        media_file:
          type: integer
          nullable: true
          title: 미디어 파일
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          default: 0
          title: 순서
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: 재생시간(초)
      required:
      - content_type
      - course
      - title
    LectureDetail:
      type: object
      description: 레슨 상세 Serializer
      properties:
        id:
          type: integer
          readOnly: true
        course:
          allOf:
          - $ref: '#/components/schemas/CourseList'
          readOnly: true
        title:
          type: string
          title: 레슨 제목
          maxLength: 200
        content_type:
          allOf:
          - $ref: '#/components/schemas/ContentTypeEnum'
          title: 콘텐츠 타입
        content_text:
          type: string
          title: 텍스트 내용
        video_url:
          type: string
          format: uri
          title: 외부 비디오 URL
          maxLength: 200
        media_file:
          type: integer
          nullable: true
          title: 미디어 파일
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          default: 0
          title: 순서
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: 재생시간(초)
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: 생성일
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: 수정일
      required:
      - content_type
      - course
      - created_at
      - id
      - title
      - updated_at
    LectureList:
      type: object
      description: 레슨 목록 Serializer (간단한 정보)
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: integer
          title: 강의
        title:
          type: string
          title: 레슨 제목
          maxLength: 200
        content_type:
          allOf:
          - $ref: '#/components/schemas/ContentTypeEnum'
          title: 콘텐츠 타입
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          default: 0
          title: 순서
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: 재생시간(초)
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: 생성일
      required:
      - content_type
      - course
      - created_at
      - id
      - title
    LectureUpdate:
      type: object
      description: 레슨 수정 Serializer
      properties:
        title:
          type: string
          title: 레슨 제목
          maxLength: 200
        content_type:
          allOf:
          - $ref: '#/components/schemas/ContentTypeEnum'
          title: 콘텐츠 타입
        content_text:
          type: string
          title: 텍스트 내용
        video_url:
          type: string
          format: uri
          title: 외부 비디오 URL
          maxLength: 200
        media_file:
          type: integer
          nullable: true
          title: 미디어 파일
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: 순서
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: 재생시간(초)
      required:
      - content_type
      - title
    LectureUpdateRequest:
      type: object
      description: 레슨 수정 Serializer
      properties:
        title:
          type: string
          minLength: 1
          title: 레슨 제목
          maxLength: 200
        content_type:
          allOf:
          - $ref: '#/components/schemas/ContentTypeEnum'
          title: 콘텐츠 타입
        content_text:
          type: string
          title: 텍스트 내용
        video_url:
          type: string
          format: uri
          title: 외부 비디오 URL
          maxLength: 200
        media_file:
          type: integer
          nullable: true
          title: 미디어 파일
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: 순서
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: 재생시간(초)
      required:
      - content_type
      - title
    MediaFile:
      type: object
      description: 미디어 파일 Serializer
      properties:
        id:
          type: integer
          readOnly: true
        file:
          type: string
          format: uri
          title: 파일
        file_type:
          allOf:
          - $ref: '#/components/schemas/FileTypeEnum'
          readOnly: true
          title: 파일 타입
        file_size:
          type: integer
          readOnly: true
          title: 파일 크기(bytes)
        mime_type:
          type: string
          readOnly: true
          title: MIME 타입
        original_filename:
          type: string
          readOnly: true
          title: 원본 파일명
        uploaded_by:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        file_url:
          type: string
          readOnly: true
        stream_url:
          type: string
          readOnly: true
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
          title: 업로드일
      required:
      - file
      - file_size
      - file_type
      - file_url
      - id
      - mime_type
      - original_filename
      - stream_url
      - uploaded_at
      - uploaded_by
    MediaFileUploadRequest:
      type: object
      description: 미디어 파일 업로드 Serializer
      properties:
        file:
          type: string
          format: binary
          title: 파일
      required:
      - file
    PaginatedCommentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    PaginatedCourseListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CourseList'
    PaginatedLectureListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LectureList'
    PaginatedMediaFileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MediaFile'
    PatchedCommentUpdateRequest:
      type: object
      description: 댓글 수정 Serializer
      properties:
        content:
          type: string
          minLength: 1
          title: 내용
    PatchedCourseUpdateRequest:
      type: object
      description: 강의 수정 Serializer
      properties:
        title:
          type: string
          minLength: 1
          title: 강의 제목
          maxLength: 200
        description:
          type: string
          minLength: 1
          title: 강의 설명
        thumbnail:
          type: string
          format: binary
          nullable: true
          title: 썸네일
        is_published:
          type: boolean
          title: 공개 여부
    PatchedLectureUpdateRequest:
      type: object
      description: 레슨 수정 Serializer
      properties:
        title:
          type: string
          minLength: 1
          title: 레슨 제목
          maxLength: 200
        content_type:
          allOf:
          - $ref: '#/components/schemas/ContentTypeEnum'
          title: 콘텐츠 타입
        content_text:
          type: string
          title: 텍스트 내용
        video_url:
          type: string
          format: uri
          title: 외부 비디오 URL
          maxLength: 200
        media_file:
          type: integer
          nullable: true
          title: 미디어 파일
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: 순서
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: 재생시간(초)
    PatchedUserProfileRequest:
      type: object
      description: 프로필 조회 및 수정 Serializer
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: 이메일
          maxLength: 254
        profile_image:
          type: string
          format: binary
          nullable: true
          title: 프로필 이미지
        bio:
          type: string
          title: 자기소개
          maxLength: 500
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    User:
      type: object
      description: 사용자 기본 Serializer
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: 사용자 이름
          description: 150자 이하 문자, 숫자 그리고 @/./+/-/_만 가능합니다.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: 이메일
          maxLength: 254
        profile_image:
          type: string
          format: uri
          nullable: true
          title: 프로필 이미지
        bio:
          type: string
          title: 자기소개
          maxLength: 500
        courses_count:
          type: integer
          readOnly: true
          title: 강의 수
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: 가입일
      required:
      - courses_count
      - created_at
      - email
      - id
      - username
    UserProfile:
      type: object
      description: 프로필 조회 및 수정 Serializer
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          title: 사용자 이름
          description: 150자 이하 문자, 숫자 그리고 @/./+/-/_만 가능합니다.
        email:
          type: string
          format: email
          title: 이메일
          maxLength: 254
        profile_image:
          type: string
          format: uri
          nullable: true
          title: 프로필 이미지
        bio:
          type: string
          title: 자기소개
          maxLength: 500
        courses_count:
          type: integer
          readOnly: true
          title: 강의 수
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: 가입일
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: 수정일
      required:
      - courses_count
      - created_at
      - email
      - id
      - updated_at
      - username
    UserProfileRequest:
      type: object
      description: 프로필 조회 및 수정 Serializer
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: 이메일
          maxLength: 254
        profile_image:
          type: string
          format: binary
          nullable: true
          title: 프로필 이미지
        bio:
          type: string
          title: 자기소개
          maxLength: 500
      required:
      - email
    UserRegistrationRequest:
      type: object
      description: 회원가입 Serializer
      properties:
        username:
          type: string
          minLength: 1
          title: 사용자 이름
          description: 150자 이하 문자, 숫자 그리고 @/./+/-/_만 가능합니다.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          minLength: 1
          title: 이메일
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 1
        password2:
          type: string
          writeOnly: true
          minLength: 1
          title: 비밀번호 확인
      required:
      - email
      - password
      - password2
      - username
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
